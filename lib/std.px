
func ord(Char c) Int extern
func chr(Int c) Char extern

func str([Char] a) String extern

func write(String s) extern
func writeLine(String s) extern

func read() String extern
func readLine() String extern
func readInt() Int extern
func readChar() Char extern


func min(Int a, Int b) Int def
    if a < b do
        return a
    else do
        return b

func max(Int a, Int b) Int def
    if b < a do
        return a
    else do
        return b


func Int_pow(Int b, Int p) Int def
    if p < 0 do
        return 0
    r = 1
    while p > 0 do
        if p % 2 > 0 do
            r *= b
        b *= b
        p /= 2
    return r


func CharArray_join([Char] array, String sep: "") String def
    m = sep.length
    n = array.length
    r = [' '] * ((m+1) * (n-1) + 1)
    p = 0
    for i in 0...n do
        r[p] = array[i]
        p += 1
        if i < n-1 do
            for c in sep do
                r[p] = c
                p += 1
    return str(r)

func StringArray_join([String] array, String sep: "") String def
    m = sep.length
    n = array.length
    l = 0
    for s in array do
        l += s.length
    r = [' '] * (l + m*(n-1))
    p = 0
    for i in 0...n do
        for c in array[i] do
            r[p] = c
            p += 1
        if i < n-1 do
            for c in sep do
                r[p] = c
                p += 1
    return str(r)


func Int_toString(Int n) String def
    if n == 0 do
        return "0"
    neg = false
    if n < 0 do
        neg = true
        n = -n
    r = [' '] * 22
    p = 0
    while n != 0 do
        r[p] = chr(n % 10 + 48)
        n /= 10
        p += 1
    if neg do
        r[p] = '-'
        p += 1
    r' = [' '] * p
    for i in 0...p do
        r'[i] = r[p-1-i]
    return str(r')

func Bool_toString(Bool b) String def
    if b do
        return "true"
    else do
        return "false"

func Char_toString(Char c) String def
    return str([c])

func String_toString(String s) String def
    return s


func String_toInt(String s) Int def
    n = 0
    for c in s do
        if '0' <= c <= '9' do
            n = n*10 + ord(c)-48
    if s[0] == '-' do
        n = -n
    return n

func String_compare(String a, String b) Int def
    for i in 0...min(a.length, b.length) do
        if a[i] < b[i] do
            return -1
        elif b[i] < a[i] do
            return 1
    if a.length < b.length do
        return -1
    elif b.length < a.length do
        return 1
    return 0
