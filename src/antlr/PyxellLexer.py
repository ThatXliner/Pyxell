# Generated from Pyxell.g4 by ANTLR 4.7.2
from antlr4 import *
from io import StringIO
from typing.io import TextIO
import sys



def serializedATN():
    with StringIO() as buf:
        buf.write("\3\u608b\ua72a\u8133\ub9ed\u417c\u3be7\u7786\u5964\2K")
        buf.write("\u01de\b\1\4\2\t\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7")
        buf.write("\t\7\4\b\t\b\4\t\t\t\4\n\t\n\4\13\t\13\4\f\t\f\4\r\t\r")
        buf.write("\4\16\t\16\4\17\t\17\4\20\t\20\4\21\t\21\4\22\t\22\4\23")
        buf.write("\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27\t\27\4\30\t\30")
        buf.write("\4\31\t\31\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4\36")
        buf.write("\t\36\4\37\t\37\4 \t \4!\t!\4\"\t\"\4#\t#\4$\t$\4%\t%")
        buf.write("\4&\t&\4\'\t\'\4(\t(\4)\t)\4*\t*\4+\t+\4,\t,\4-\t-\4.")
        buf.write("\t.\4/\t/\4\60\t\60\4\61\t\61\4\62\t\62\4\63\t\63\4\64")
        buf.write("\t\64\4\65\t\65\4\66\t\66\4\67\t\67\48\t8\49\t9\4:\t:")
        buf.write("\4;\t;\4<\t<\4=\t=\4>\t>\4?\t?\4@\t@\4A\tA\4B\tB\4C\t")
        buf.write("C\4D\tD\4E\tE\4F\tF\4G\tG\4H\tH\4I\tI\4J\tJ\4K\tK\4L\t")
        buf.write("L\4M\tM\3\2\3\2\3\3\3\3\3\3\3\3\3\4\3\4\3\4\3\4\3\4\3")
        buf.write("\5\3\5\3\5\3\5\3\5\3\5\3\5\3\6\3\6\3\6\3\7\3\7\3\7\3\7")
        buf.write("\3\7\3\b\3\b\3\b\3\b\3\b\3\b\3\t\3\t\3\n\3\n\3\13\3\13")
        buf.write("\3\f\3\f\3\r\3\r\3\16\3\16\3\17\3\17\3\20\3\20\3\20\3")
        buf.write("\21\3\21\3\21\3\22\3\22\3\23\3\23\3\24\3\24\3\25\3\25")
        buf.write("\3\25\3\25\3\25\3\25\3\26\3\26\3\26\3\26\3\26\3\26\3\26")
        buf.write("\3\26\3\26\3\27\3\27\3\27\3\27\3\27\3\27\3\27\3\30\3\30")
        buf.write("\3\31\3\31\3\31\3\32\3\32\3\32\3\32\3\32\3\33\3\33\3\33")
        buf.write("\3\33\3\33\3\34\3\34\3\34\3\34\3\34\3\34\3\35\3\35\3\35")
        buf.write("\3\35\3\35\3\35\3\36\3\36\3\36\3\36\3\37\3\37\3\37\3 ")
        buf.write("\3 \3 \3 \3 \3!\3!\3!\3!\3!\3\"\3\"\3#\3#\3$\3$\3$\3$")
        buf.write("\3$\3$\3$\3%\3%\3&\3&\3&\3\'\3\'\3(\3(\3)\3)\3)\3)\3*")
        buf.write("\3*\3+\3+\3,\3,\3-\3-\3.\3.\3.\3/\3/\3/\3/\3\60\3\60\3")
        buf.write("\60\3\61\3\61\3\61\3\62\3\62\3\63\3\63\3\63\3\64\3\64")
        buf.write("\3\65\3\65\3\65\3\66\3\66\3\66\3\66\3\67\3\67\3\67\3\67")
        buf.write("\38\38\38\39\39\3:\3:\3:\3:\3:\3;\3;\3;\3;\3;\3;\3<\3")
        buf.write("<\3<\3<\3<\3=\3=\3=\3=\3>\3>\3>\3>\3>\3>\3?\3?\3?\3?\3")
        buf.write("?\3@\3@\3@\3@\3@\3A\3A\3A\3A\3A\3A\3A\3B\3B\3B\3C\6C\u018b")
        buf.write("\nC\rC\16C\u018c\3D\6D\u0190\nD\rD\16D\u0191\3D\3D\6D")
        buf.write("\u0196\nD\rD\16D\u0197\3D\3D\5D\u019c\nD\3D\6D\u019f\n")
        buf.write("D\rD\16D\u01a0\5D\u01a3\nD\3E\3E\3E\3E\7E\u01a9\nE\fE")
        buf.write("\16E\u01ac\13E\3E\3E\3F\3F\3F\3F\7F\u01b4\nF\fF\16F\u01b7")
        buf.write("\13F\3F\3F\3G\3G\7G\u01bd\nG\fG\16G\u01c0\13G\3H\3H\3")
        buf.write("I\3I\3J\3J\3J\5J\u01c9\nJ\3K\3K\3K\3K\7K\u01cf\nK\fK\16")
        buf.write("K\u01d2\13K\3K\3K\3L\6L\u01d7\nL\rL\16L\u01d8\3L\3L\3")
        buf.write("M\3M\2\2N\3\3\5\4\7\5\t\6\13\7\r\b\17\t\21\n\23\13\25")
        buf.write("\f\27\r\31\16\33\17\35\20\37\21!\22#\23%\24\'\25)\26+")
        buf.write("\27-\30/\31\61\32\63\33\65\34\67\359\36;\37= ?!A\"C#E")
        buf.write("$G%I&K\'M(O)Q*S+U,W-Y.[/]\60_\61a\62c\63e\64g\65i\66k")
        buf.write("\67m8o9q:s;u<w=y>{?}@\177A\u0081B\u0083C\u0085D\u0087")
        buf.write("E\u0089F\u008bG\u008dH\u008f\2\u0091\2\u0093\2\u0095I")
        buf.write("\u0097J\u0099K\3\2\13\4\2))^^\6\2))^^ppvv\4\2$$^^\6\2")
        buf.write("$$^^ppvv\3\2\62;\5\2C\\aac|\4\2))aa\4\2\f\f\16\17\5\2")
        buf.write("\13\f\17\17\"\"\2\u01e9\2\3\3\2\2\2\2\5\3\2\2\2\2\7\3")
        buf.write("\2\2\2\2\t\3\2\2\2\2\13\3\2\2\2\2\r\3\2\2\2\2\17\3\2\2")
        buf.write("\2\2\21\3\2\2\2\2\23\3\2\2\2\2\25\3\2\2\2\2\27\3\2\2\2")
        buf.write("\2\31\3\2\2\2\2\33\3\2\2\2\2\35\3\2\2\2\2\37\3\2\2\2\2")
        buf.write("!\3\2\2\2\2#\3\2\2\2\2%\3\2\2\2\2\'\3\2\2\2\2)\3\2\2\2")
        buf.write("\2+\3\2\2\2\2-\3\2\2\2\2/\3\2\2\2\2\61\3\2\2\2\2\63\3")
        buf.write("\2\2\2\2\65\3\2\2\2\2\67\3\2\2\2\29\3\2\2\2\2;\3\2\2\2")
        buf.write("\2=\3\2\2\2\2?\3\2\2\2\2A\3\2\2\2\2C\3\2\2\2\2E\3\2\2")
        buf.write("\2\2G\3\2\2\2\2I\3\2\2\2\2K\3\2\2\2\2M\3\2\2\2\2O\3\2")
        buf.write("\2\2\2Q\3\2\2\2\2S\3\2\2\2\2U\3\2\2\2\2W\3\2\2\2\2Y\3")
        buf.write("\2\2\2\2[\3\2\2\2\2]\3\2\2\2\2_\3\2\2\2\2a\3\2\2\2\2c")
        buf.write("\3\2\2\2\2e\3\2\2\2\2g\3\2\2\2\2i\3\2\2\2\2k\3\2\2\2\2")
        buf.write("m\3\2\2\2\2o\3\2\2\2\2q\3\2\2\2\2s\3\2\2\2\2u\3\2\2\2")
        buf.write("\2w\3\2\2\2\2y\3\2\2\2\2{\3\2\2\2\2}\3\2\2\2\2\177\3\2")
        buf.write("\2\2\2\u0081\3\2\2\2\2\u0083\3\2\2\2\2\u0085\3\2\2\2\2")
        buf.write("\u0087\3\2\2\2\2\u0089\3\2\2\2\2\u008b\3\2\2\2\2\u008d")
        buf.write("\3\2\2\2\2\u0095\3\2\2\2\2\u0097\3\2\2\2\2\u0099\3\2\2")
        buf.write("\2\3\u009b\3\2\2\2\5\u009d\3\2\2\2\7\u00a1\3\2\2\2\t\u00a6")
        buf.write("\3\2\2\2\13\u00ad\3\2\2\2\r\u00b0\3\2\2\2\17\u00b5\3\2")
        buf.write("\2\2\21\u00bb\3\2\2\2\23\u00bd\3\2\2\2\25\u00bf\3\2\2")
        buf.write("\2\27\u00c1\3\2\2\2\31\u00c3\3\2\2\2\33\u00c5\3\2\2\2")
        buf.write("\35\u00c7\3\2\2\2\37\u00c9\3\2\2\2!\u00cc\3\2\2\2#\u00cf")
        buf.write("\3\2\2\2%\u00d1\3\2\2\2\'\u00d3\3\2\2\2)\u00d5\3\2\2\2")
        buf.write("+\u00db\3\2\2\2-\u00e4\3\2\2\2/\u00eb\3\2\2\2\61\u00ed")
        buf.write("\3\2\2\2\63\u00f0\3\2\2\2\65\u00f5\3\2\2\2\67\u00fa\3")
        buf.write("\2\2\29\u0100\3\2\2\2;\u0106\3\2\2\2=\u010a\3\2\2\2?\u010d")
        buf.write("\3\2\2\2A\u0112\3\2\2\2C\u0117\3\2\2\2E\u0119\3\2\2\2")
        buf.write("G\u011b\3\2\2\2I\u0122\3\2\2\2K\u0124\3\2\2\2M\u0127\3")
        buf.write("\2\2\2O\u0129\3\2\2\2Q\u012b\3\2\2\2S\u012f\3\2\2\2U\u0131")
        buf.write("\3\2\2\2W\u0133\3\2\2\2Y\u0135\3\2\2\2[\u0137\3\2\2\2")
        buf.write("]\u013a\3\2\2\2_\u013e\3\2\2\2a\u0141\3\2\2\2c\u0144\3")
        buf.write("\2\2\2e\u0146\3\2\2\2g\u0149\3\2\2\2i\u014b\3\2\2\2k\u014e")
        buf.write("\3\2\2\2m\u0152\3\2\2\2o\u0156\3\2\2\2q\u0159\3\2\2\2")
        buf.write("s\u015b\3\2\2\2u\u0160\3\2\2\2w\u0166\3\2\2\2y\u016b\3")
        buf.write("\2\2\2{\u016f\3\2\2\2}\u0175\3\2\2\2\177\u017a\3\2\2\2")
        buf.write("\u0081\u017f\3\2\2\2\u0083\u0186\3\2\2\2\u0085\u018a\3")
        buf.write("\2\2\2\u0087\u018f\3\2\2\2\u0089\u01a4\3\2\2\2\u008b\u01af")
        buf.write("\3\2\2\2\u008d\u01ba\3\2\2\2\u008f\u01c1\3\2\2\2\u0091")
        buf.write("\u01c3\3\2\2\2\u0093\u01c8\3\2\2\2\u0095\u01ca\3\2\2\2")
        buf.write("\u0097\u01d6\3\2\2\2\u0099\u01dc\3\2\2\2\u009b\u009c\7")
        buf.write("=\2\2\u009c\4\3\2\2\2\u009d\u009e\7w\2\2\u009e\u009f\7")
        buf.write("u\2\2\u009f\u00a0\7g\2\2\u00a0\6\3\2\2\2\u00a1\u00a2\7")
        buf.write("q\2\2\u00a2\u00a3\7p\2\2\u00a3\u00a4\7n\2\2\u00a4\u00a5")
        buf.write("\7{\2\2\u00a5\b\3\2\2\2\u00a6\u00a7\7j\2\2\u00a7\u00a8")
        buf.write("\7k\2\2\u00a8\u00a9\7f\2\2\u00a9\u00aa\7k\2\2\u00aa\u00ab")
        buf.write("\7p\2\2\u00ab\u00ac\7i\2\2\u00ac\n\3\2\2\2\u00ad\u00ae")
        buf.write("\7c\2\2\u00ae\u00af\7u\2\2\u00af\f\3\2\2\2\u00b0\u00b1")
        buf.write("\7u\2\2\u00b1\u00b2\7m\2\2\u00b2\u00b3\7k\2\2\u00b3\u00b4")
        buf.write("\7r\2\2\u00b4\16\3\2\2\2\u00b5\u00b6\7r\2\2\u00b6\u00b7")
        buf.write("\7t\2\2\u00b7\u00b8\7k\2\2\u00b8\u00b9\7p\2\2\u00b9\u00ba")
        buf.write("\7v\2\2\u00ba\20\3\2\2\2\u00bb\u00bc\7?\2\2\u00bc\22\3")
        buf.write("\2\2\2\u00bd\u00be\7`\2\2\u00be\24\3\2\2\2\u00bf\u00c0")
        buf.write("\7,\2\2\u00c0\26\3\2\2\2\u00c1\u00c2\7\61\2\2\u00c2\30")
        buf.write("\3\2\2\2\u00c3\u00c4\7\'\2\2\u00c4\32\3\2\2\2\u00c5\u00c6")
        buf.write("\7-\2\2\u00c6\34\3\2\2\2\u00c7\u00c8\7/\2\2\u00c8\36\3")
        buf.write("\2\2\2\u00c9\u00ca\7>\2\2\u00ca\u00cb\7>\2\2\u00cb \3")
        buf.write("\2\2\2\u00cc\u00cd\7@\2\2\u00cd\u00ce\7@\2\2\u00ce\"\3")
        buf.write("\2\2\2\u00cf\u00d0\7(\2\2\u00d0$\3\2\2\2\u00d1\u00d2\7")
        buf.write("&\2\2\u00d2&\3\2\2\2\u00d3\u00d4\7~\2\2\u00d4(\3\2\2\2")
        buf.write("\u00d5\u00d6\7d\2\2\u00d6\u00d7\7t\2\2\u00d7\u00d8\7g")
        buf.write("\2\2\u00d8\u00d9\7c\2\2\u00d9\u00da\7m\2\2\u00da*\3\2")
        buf.write("\2\2\u00db\u00dc\7e\2\2\u00dc\u00dd\7q\2\2\u00dd\u00de")
        buf.write("\7p\2\2\u00de\u00df\7v\2\2\u00df\u00e0\7k\2\2\u00e0\u00e1")
        buf.write("\7p\2\2\u00e1\u00e2\7w\2\2\u00e2\u00e3\7g\2\2\u00e3,\3")
        buf.write("\2\2\2\u00e4\u00e5\7t\2\2\u00e5\u00e6\7g\2\2\u00e6\u00e7")
        buf.write("\7v\2\2\u00e7\u00e8\7w\2\2\u00e8\u00e9\7t\2\2\u00e9\u00ea")
        buf.write("\7p\2\2\u00ea.\3\2\2\2\u00eb\u00ec\7.\2\2\u00ec\60\3\2")
        buf.write("\2\2\u00ed\u00ee\7k\2\2\u00ee\u00ef\7h\2\2\u00ef\62\3")
        buf.write("\2\2\2\u00f0\u00f1\7g\2\2\u00f1\u00f2\7n\2\2\u00f2\u00f3")
        buf.write("\7k\2\2\u00f3\u00f4\7h\2\2\u00f4\64\3\2\2\2\u00f5\u00f6")
        buf.write("\7g\2\2\u00f6\u00f7\7n\2\2\u00f7\u00f8\7u\2\2\u00f8\u00f9")
        buf.write("\7g\2\2\u00f9\66\3\2\2\2\u00fa\u00fb\7y\2\2\u00fb\u00fc")
        buf.write("\7j\2\2\u00fc\u00fd\7k\2\2\u00fd\u00fe\7n\2\2\u00fe\u00ff")
        buf.write("\7g\2\2\u00ff8\3\2\2\2\u0100\u0101\7w\2\2\u0101\u0102")
        buf.write("\7p\2\2\u0102\u0103\7v\2\2\u0103\u0104\7k\2\2\u0104\u0105")
        buf.write("\7n\2\2\u0105:\3\2\2\2\u0106\u0107\7h\2\2\u0107\u0108")
        buf.write("\7q\2\2\u0108\u0109\7t\2\2\u0109<\3\2\2\2\u010a\u010b")
        buf.write("\7k\2\2\u010b\u010c\7p\2\2\u010c>\3\2\2\2\u010d\u010e")
        buf.write("\7u\2\2\u010e\u010f\7v\2\2\u010f\u0110\7g\2\2\u0110\u0111")
        buf.write("\7r\2\2\u0111@\3\2\2\2\u0112\u0113\7h\2\2\u0113\u0114")
        buf.write("\7w\2\2\u0114\u0115\7p\2\2\u0115\u0116\7e\2\2\u0116B\3")
        buf.write("\2\2\2\u0117\u0118\7*\2\2\u0118D\3\2\2\2\u0119\u011a\7")
        buf.write("+\2\2\u011aF\3\2\2\2\u011b\u011c\7g\2\2\u011c\u011d\7")
        buf.write("z\2\2\u011d\u011e\7v\2\2\u011e\u011f\7g\2\2\u011f\u0120")
        buf.write("\7t\2\2\u0120\u0121\7p\2\2\u0121H\3\2\2\2\u0122\u0123")
        buf.write("\7<\2\2\u0123J\3\2\2\2\u0124\u0125\7f\2\2\u0125\u0126")
        buf.write("\7q\2\2\u0126L\3\2\2\2\u0127\u0128\7}\2\2\u0128N\3\2\2")
        buf.write("\2\u0129\u012a\7\177\2\2\u012aP\3\2\2\2\u012b\u012c\7")
        buf.write("f\2\2\u012c\u012d\7g\2\2\u012d\u012e\7h\2\2\u012eR\3\2")
        buf.write("\2\2\u012f\u0130\7]\2\2\u0130T\3\2\2\2\u0131\u0132\7_")
        buf.write("\2\2\u0132V\3\2\2\2\u0133\u0134\7\60\2\2\u0134X\3\2\2")
        buf.write("\2\u0135\u0136\7\u0080\2\2\u0136Z\3\2\2\2\u0137\u0138")
        buf.write("\7\60\2\2\u0138\u0139\7\60\2\2\u0139\\\3\2\2\2\u013a\u013b")
        buf.write("\7\60\2\2\u013b\u013c\7\60\2\2\u013c\u013d\7\60\2\2\u013d")
        buf.write("^\3\2\2\2\u013e\u013f\7?\2\2\u013f\u0140\7?\2\2\u0140")
        buf.write("`\3\2\2\2\u0141\u0142\7#\2\2\u0142\u0143\7?\2\2\u0143")
        buf.write("b\3\2\2\2\u0144\u0145\7>\2\2\u0145d\3\2\2\2\u0146\u0147")
        buf.write("\7>\2\2\u0147\u0148\7?\2\2\u0148f\3\2\2\2\u0149\u014a")
        buf.write("\7@\2\2\u014ah\3\2\2\2\u014b\u014c\7@\2\2\u014c\u014d")
        buf.write("\7?\2\2\u014dj\3\2\2\2\u014e\u014f\7p\2\2\u014f\u0150")
        buf.write("\7q\2\2\u0150\u0151\7v\2\2\u0151l\3\2\2\2\u0152\u0153")
        buf.write("\7c\2\2\u0153\u0154\7p\2\2\u0154\u0155\7f\2\2\u0155n\3")
        buf.write("\2\2\2\u0156\u0157\7q\2\2\u0157\u0158\7t\2\2\u0158p\3")
        buf.write("\2\2\2\u0159\u015a\7A\2\2\u015ar\3\2\2\2\u015b\u015c\7")
        buf.write("v\2\2\u015c\u015d\7t\2\2\u015d\u015e\7w\2\2\u015e\u015f")
        buf.write("\7g\2\2\u015ft\3\2\2\2\u0160\u0161\7h\2\2\u0161\u0162")
        buf.write("\7c\2\2\u0162\u0163\7n\2\2\u0163\u0164\7u\2\2\u0164\u0165")
        buf.write("\7g\2\2\u0165v\3\2\2\2\u0166\u0167\7X\2\2\u0167\u0168")
        buf.write("\7q\2\2\u0168\u0169\7k\2\2\u0169\u016a\7f\2\2\u016ax\3")
        buf.write("\2\2\2\u016b\u016c\7K\2\2\u016c\u016d\7p\2\2\u016d\u016e")
        buf.write("\7v\2\2\u016ez\3\2\2\2\u016f\u0170\7H\2\2\u0170\u0171")
        buf.write("\7n\2\2\u0171\u0172\7q\2\2\u0172\u0173\7c\2\2\u0173\u0174")
        buf.write("\7v\2\2\u0174|\3\2\2\2\u0175\u0176\7D\2\2\u0176\u0177")
        buf.write("\7q\2\2\u0177\u0178\7q\2\2\u0178\u0179\7n\2\2\u0179~\3")
        buf.write("\2\2\2\u017a\u017b\7E\2\2\u017b\u017c\7j\2\2\u017c\u017d")
        buf.write("\7c\2\2\u017d\u017e\7t\2\2\u017e\u0080\3\2\2\2\u017f\u0180")
        buf.write("\7U\2\2\u0180\u0181\7v\2\2\u0181\u0182\7t\2\2\u0182\u0183")
        buf.write("\7k\2\2\u0183\u0184\7p\2\2\u0184\u0185\7i\2\2\u0185\u0082")
        buf.write("\3\2\2\2\u0186\u0187\7/\2\2\u0187\u0188\7@\2\2\u0188\u0084")
        buf.write("\3\2\2\2\u0189\u018b\5\u008fH\2\u018a\u0189\3\2\2\2\u018b")
        buf.write("\u018c\3\2\2\2\u018c\u018a\3\2\2\2\u018c\u018d\3\2\2\2")
        buf.write("\u018d\u0086\3\2\2\2\u018e\u0190\5\u008fH\2\u018f\u018e")
        buf.write("\3\2\2\2\u0190\u0191\3\2\2\2\u0191\u018f\3\2\2\2\u0191")
        buf.write("\u0192\3\2\2\2\u0192\u0193\3\2\2\2\u0193\u0195\7\60\2")
        buf.write("\2\u0194\u0196\5\u008fH\2\u0195\u0194\3\2\2\2\u0196\u0197")
        buf.write("\3\2\2\2\u0197\u0195\3\2\2\2\u0197\u0198\3\2\2\2\u0198")
        buf.write("\u01a2\3\2\2\2\u0199\u019b\7g\2\2\u019a\u019c\7/\2\2\u019b")
        buf.write("\u019a\3\2\2\2\u019b\u019c\3\2\2\2\u019c\u019e\3\2\2\2")
        buf.write("\u019d\u019f\5\u008fH\2\u019e\u019d\3\2\2\2\u019f\u01a0")
        buf.write("\3\2\2\2\u01a0\u019e\3\2\2\2\u01a0\u01a1\3\2\2\2\u01a1")
        buf.write("\u01a3\3\2\2\2\u01a2\u0199\3\2\2\2\u01a2\u01a3\3\2\2\2")
        buf.write("\u01a3\u0088\3\2\2\2\u01a4\u01aa\7)\2\2\u01a5\u01a9\n")
        buf.write("\2\2\2\u01a6\u01a7\7^\2\2\u01a7\u01a9\t\3\2\2\u01a8\u01a5")
        buf.write("\3\2\2\2\u01a8\u01a6\3\2\2\2\u01a9\u01ac\3\2\2\2\u01aa")
        buf.write("\u01a8\3\2\2\2\u01aa\u01ab\3\2\2\2\u01ab\u01ad\3\2\2\2")
        buf.write("\u01ac\u01aa\3\2\2\2\u01ad\u01ae\7)\2\2\u01ae\u008a\3")
        buf.write("\2\2\2\u01af\u01b5\7$\2\2\u01b0\u01b4\n\4\2\2\u01b1\u01b2")
        buf.write("\7^\2\2\u01b2\u01b4\t\5\2\2\u01b3\u01b0\3\2\2\2\u01b3")
        buf.write("\u01b1\3\2\2\2\u01b4\u01b7\3\2\2\2\u01b5\u01b3\3\2\2\2")
        buf.write("\u01b5\u01b6\3\2\2\2\u01b6\u01b8\3\2\2\2\u01b7\u01b5\3")
        buf.write("\2\2\2\u01b8\u01b9\7$\2\2\u01b9\u008c\3\2\2\2\u01ba\u01be")
        buf.write("\5\u0091I\2\u01bb\u01bd\5\u0093J\2\u01bc\u01bb\3\2\2\2")
        buf.write("\u01bd\u01c0\3\2\2\2\u01be\u01bc\3\2\2\2\u01be\u01bf\3")
        buf.write("\2\2\2\u01bf\u008e\3\2\2\2\u01c0\u01be\3\2\2\2\u01c1\u01c2")
        buf.write("\t\6\2\2\u01c2\u0090\3\2\2\2\u01c3\u01c4\t\7\2\2\u01c4")
        buf.write("\u0092\3\2\2\2\u01c5\u01c9\5\u0091I\2\u01c6\u01c9\5\u008f")
        buf.write("H\2\u01c7\u01c9\t\b\2\2\u01c8\u01c5\3\2\2\2\u01c8\u01c6")
        buf.write("\3\2\2\2\u01c8\u01c7\3\2\2\2\u01c9\u0094\3\2\2\2\u01ca")
        buf.write("\u01cb\7/\2\2\u01cb\u01cc\7/\2\2\u01cc\u01d0\3\2\2\2\u01cd")
        buf.write("\u01cf\n\t\2\2\u01ce\u01cd\3\2\2\2\u01cf\u01d2\3\2\2\2")
        buf.write("\u01d0\u01ce\3\2\2\2\u01d0\u01d1\3\2\2\2\u01d1\u01d3\3")
        buf.write("\2\2\2\u01d2\u01d0\3\2\2\2\u01d3\u01d4\bK\2\2\u01d4\u0096")
        buf.write("\3\2\2\2\u01d5\u01d7\t\n\2\2\u01d6\u01d5\3\2\2\2\u01d7")
        buf.write("\u01d8\3\2\2\2\u01d8\u01d6\3\2\2\2\u01d8\u01d9\3\2\2\2")
        buf.write("\u01d9\u01da\3\2\2\2\u01da\u01db\bL\2\2\u01db\u0098\3")
        buf.write("\2\2\2\u01dc\u01dd\13\2\2\2\u01dd\u009a\3\2\2\2\21\2\u018c")
        buf.write("\u0191\u0197\u019b\u01a0\u01a2\u01a8\u01aa\u01b3\u01b5")
        buf.write("\u01be\u01c8\u01d0\u01d8\3\b\2\2")
        return buf.getvalue()


class PyxellLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    T__0 = 1
    T__1 = 2
    T__2 = 3
    T__3 = 4
    T__4 = 5
    T__5 = 6
    T__6 = 7
    T__7 = 8
    T__8 = 9
    T__9 = 10
    T__10 = 11
    T__11 = 12
    T__12 = 13
    T__13 = 14
    T__14 = 15
    T__15 = 16
    T__16 = 17
    T__17 = 18
    T__18 = 19
    T__19 = 20
    T__20 = 21
    T__21 = 22
    T__22 = 23
    T__23 = 24
    T__24 = 25
    T__25 = 26
    T__26 = 27
    T__27 = 28
    T__28 = 29
    T__29 = 30
    T__30 = 31
    T__31 = 32
    T__32 = 33
    T__33 = 34
    T__34 = 35
    T__35 = 36
    T__36 = 37
    T__37 = 38
    T__38 = 39
    T__39 = 40
    T__40 = 41
    T__41 = 42
    T__42 = 43
    T__43 = 44
    T__44 = 45
    T__45 = 46
    T__46 = 47
    T__47 = 48
    T__48 = 49
    T__49 = 50
    T__50 = 51
    T__51 = 52
    T__52 = 53
    T__53 = 54
    T__54 = 55
    T__55 = 56
    T__56 = 57
    T__57 = 58
    T__58 = 59
    T__59 = 60
    T__60 = 61
    T__61 = 62
    T__62 = 63
    T__63 = 64
    T__64 = 65
    INT = 66
    FLOAT = 67
    CHAR = 68
    STRING = 69
    ID = 70
    COMMENT = 71
    WS = 72
    ERR = 73

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "';'", "'use'", "'only'", "'hiding'", "'as'", "'skip'", "'print'", 
            "'='", "'^'", "'*'", "'/'", "'%'", "'+'", "'-'", "'<<'", "'>>'", 
            "'&'", "'$'", "'|'", "'break'", "'continue'", "'return'", "','", 
            "'if'", "'elif'", "'else'", "'while'", "'until'", "'for'", "'in'", 
            "'step'", "'func'", "'('", "')'", "'extern'", "':'", "'do'", 
            "'{'", "'}'", "'def'", "'['", "']'", "'.'", "'~'", "'..'", "'...'", 
            "'=='", "'!='", "'<'", "'<='", "'>'", "'>='", "'not'", "'and'", 
            "'or'", "'?'", "'true'", "'false'", "'Void'", "'Int'", "'Float'", 
            "'Bool'", "'Char'", "'String'", "'->'" ]

    symbolicNames = [ "<INVALID>",
            "INT", "FLOAT", "CHAR", "STRING", "ID", "COMMENT", "WS", "ERR" ]

    ruleNames = [ "T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", 
                  "T__7", "T__8", "T__9", "T__10", "T__11", "T__12", "T__13", 
                  "T__14", "T__15", "T__16", "T__17", "T__18", "T__19", 
                  "T__20", "T__21", "T__22", "T__23", "T__24", "T__25", 
                  "T__26", "T__27", "T__28", "T__29", "T__30", "T__31", 
                  "T__32", "T__33", "T__34", "T__35", "T__36", "T__37", 
                  "T__38", "T__39", "T__40", "T__41", "T__42", "T__43", 
                  "T__44", "T__45", "T__46", "T__47", "T__48", "T__49", 
                  "T__50", "T__51", "T__52", "T__53", "T__54", "T__55", 
                  "T__56", "T__57", "T__58", "T__59", "T__60", "T__61", 
                  "T__62", "T__63", "T__64", "INT", "FLOAT", "CHAR", "STRING", 
                  "ID", "DIGIT", "ID_START", "ID_CONT", "COMMENT", "WS", 
                  "ERR" ]

    grammarFileName = "Pyxell.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.7.2")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


